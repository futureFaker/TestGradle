apply plugin: 'com.android.application'

android {
    compileSdkVersion mCompileSdkVersion.toInteger()
    defaultConfig {
        applicationId "com.lc.testgradle"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

println('----getProjectDir--2-' + getProjectDir().absolutePath)

task helloTask(group: 'lice_test', description: 'hello task1') {
    println('--------helloTask-----')
    doFirst {
        println('-----helloTask--doFirst1--')
    }
}

helloTask.doFirst {
    println('-----helloTask--doFirst2--')
}

tasks.create('helloTask2') {
    setGroup('lice_test')
    setDescription('hello task2')
    println('--------helloTask2-----')
}

beforeEvaluate {
    println('------beforeEvaluate----')
}

def startTime, endTime

afterEvaluate {
    println('------afterEvaluate---- ' + tasks.toString())
    def preBuildTask = tasks.findByName('preBuild')
    println('-------preBuildTask----- ' + preBuildTask)
    preBuildTask.doFirst {
        println('-----preBuildTask.doFirst---- ' + preBuildTask.name)
        startTime = System.currentTimeMillis()
    }

    def buildTask = tasks.findByName('build')
    println('-------buildTask----- ' + buildTask)
    buildTask.doLast {
        println('-----buildTask.doLast---- ' + buildTask.name)
        endTime = System.currentTimeMillis()
        println('-----任务完成耗时----' + (endTime - startTime))
    }

}






